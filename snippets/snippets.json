{
	"Basic RDF - Blank_node": {
		"prefix": "RDF-D",
		"body": [
			"<_:${1:Mainsubject}> <name> \"Hamon Tower\" .",
			"<_:${1:Mainsubject}> <${2:predicate}> \"31\"${3| ,^^<xs:string> ,^^<xs:boolean> ,^^<xs:int> ,^^<xs:float> ,^^<xs:password> ,^^<xs:date> ,^^<xs:dateTime> ,^^<xs:double> ,^^<xs:positiveInteger> ,^^<geo:geojson> ,^^<geo:base64Binary> |}.",
			"<_:${1:Mainsubject}> <text> \"Аделаида\"${4| ,@ru ,@en ,@fr ,@pl ,@hi |}."
		],
		"description": "A basic estructure for RDF with Blank Node"
	},
	"Basic RDF - UID": {
		"prefix": "RDF-D_UID",
		"body": [
			"<${1:0x1}> <name> \"Hamon Tower\" .",
			"<${1:0x1}> <${2:predicate}> \"31\"${3| ,^^<xs:string> ,^^<xs:boolean> ,^^<xs:int> ,^^<xs:float> ,^^<xs:password> ,^^<xs:date> ,^^<xs:dateTime> ,^^<xs:double> ,^^<xs:positiveInteger> ,^^<geo:geojson> ,^^<geo:base64Binary> |}.",
			"<${1:0x1}> <text> \"Аделаида\"${4|@ru , ,@en ,@fr ,@pl ,@hi |}."
		],
		"description": "A basic estructure for RDF with real UIDs"
	},
	"Delete in RDF - Single": {
		"prefix": "RDF-DELETE-SINGLE",
		"body": [ "     <${1:SET_UID}> <${2:PREDICATE}> \"${3:VALUE}\" .", "", "#Single edge delete", "" ],
		"description": "A basic estructure for Delete in RDF"
	},
	"Delete S P * in RDF": {
		"prefix": "RDF-DELETE-Multiple",
		"body": [
			"     <${1:SET_UID}> <${2:EDGE}> * .",
			"",
			"#For a particular node N, all data for predicate P (and corresponding indexing) is removed with the pattern S P *.",
			""
		],
		"description": "A basic estructure for Delete S P * in RDF"
	},
	"Delete S * * in RDF - Clean the whole Node": {
		"prefix": "RDF-DELETE-CLEAN",
		"body": [
			"     <${1:SET_UID}> * * .",
			"",
			"#The pattern S * * deletes all edges out of a node (the node itself may remain as the target of edges), any reverse edges corresponding to the removed edges and any indexing for the removed data."
		],
		"description": "A basic estructure for Delete in RDF - Clean the whole Node"
	},
	"Base-RDF-Mutation": {
		"prefix": "RDF-D_Base",
		"body": [ "{", "  set {", "    #your RDF here\"", "  }", "}" ],
		"description": "A basic RDF estructure for Mutation"
	},
	"Base-RDF-Delation": {
		"prefix": "RDF-D_Delete_Base",
		"body": [ "{", "  delete {", "    #your RDF with UID here\"", "  }", "}" ],
		"description": "A basic estructure for Delete in RDF"
	},
	"A basic estructure for Dgraph RDF for Geolocation": {
		"prefix": "RDF-GEO",
		"body": [
			"<_:${1:Mainsubject}> < loc > \"{'type':'Point','coordinates':[${2:-122.4220186},${3:37.772318}]}\"^^<geo:geojson> .",
			"<_:${1:Mainsubject}> <name> \"${4:Hamon Tower}\" ."
		],
		"description": "A basic estructure for Dgraph RDF for Geolocation"
	},
	"Edges between nodes": {
		"prefix": "Dgraph-JSON-Edges-btNodes",
		"body": [
			"{",
			"  \"uid\": \"_:${1:Parent_Blank-0}\",",
			"  \"name\": \"${2:Parent_name}\",",
			"  \"friend\": {",
			"    \"uid\": \"_:${3:Child_Blank-1}\",",
			"    \"name\": \"${4:Child_name}\"",
			"  }",
			"}"
		],
		"description": "Edges between nodes"
	},
	"Add one Edge": {
		"prefix": "Dgraph-JSON-Add-1Edge",
		"body": [ "\"${1:Edge}\": {", "  \"uid\": \"_:${2:Blank-0}\",", "  \"${3:Predicate}\": \"${4:Value}\"", "}" ],
		"description": "Add one Edge with Blank node"
	},
	"Add a Facet": {
		"prefix": "Dgraph-JSON-Facet",
		"body": [ "\"${1:OriginNode}|${2:FacetName}\": \"${3:FacetValue}\"" ],
		"description": "Add a Facet"
	},
	"Add a Predicate": {
		"prefix": "Dgraph-JSON-Predicate",
		"body": [ "\"${1:Predicate}\": \"${3:Pred_Value}\"" ],
		"description": "Add a Predicate"
	},
	"Delete a Edge": {
		"prefix": "Dgraph-JSON-Delete-Edge",
		"body": [
			"{",
			"  \"uid\": \"${1:Parent_UID}\",",
			"  \"${2:EdgeLinkingThem}\": {",
			"    \"uid\": \"${3:Child_UID}\"",
			"  }",
			"}"
		],
		"description": "Delete a Edge - Means deleting a relation between nodes"
	},
	"Delete a Edge for a single pred": {
		"prefix": "Dgraph-JSON-Delete-S_P_*",
		"body": [ "{", "  \"uid\": \"${1:UID}\",", "  \"${2:Edge_list_or_predicate}\": null", "}" ],
		"description": "Delete a Edge for a single pred"
	},
	"Delete a whole Node": {
		"prefix": "Dgraph-JSON-Delete-S_*_*",
		"body": [ "{", "  \"uid\": \"${1:UID}\"", "}" ],
		"description": "Delete a whole Node - If no predicates specified, then all of the nodes outbound edges are deleted (corresponding to deleting S * *):"
	},
	"Add one Edge with Facet": {
		"prefix": "Dgraph-JSON-Add-1Edge",
		"body": [
			"\"${1:Edge}\": {",
			"  \"uid\": \"_:${2:Blank-0}\",",
			"  \"${3:Predicate}\": \"${4:Value}\",",
			"  \"${1:Edge}|${5:Predicate}\": \"${6:Value}\"",
			"}"
		],
		"description": "Add one Edge with Blank node and Facet"
	},
	"Basic JSON list in Dgraph": {
		"prefix": "Dgraph-JSON-List",
		"body": [
			"{",
			"  \"${1:NameYourlist-eg_friendsOrFruits}\": [",
			"    \"Grape\",",
			"    \"Apple\",",
			"    \"Strawberry\",",
			"    \"Banana\",",
			"    \"watermelon\"",
			"  ]",
			"}"
		],
		"description": "Basic JSON list in Dgraph"
	},
	"Add just a Blank Node": {
		"prefix": "Dgraph-JSON-BlanKNode",
		"body": [ "{\"uid\": \"_:${BlankNode}\"}," ],
		"description": "Add just a Blank Node - useful to create list of nodes"
	},
	"Dgraph JSON Base mutation": {
		"prefix": "Dgraph-JSON-MutationBase",
		"body": [
			"{",
			"  \"set\": [",
			"    {",
			"      # One JSON obj in here",
			"    },",
			"    {",
			"      # Another JSON obj in here for multiple operations",
			"    }",
			"  ]",
			"}",
			""
		],
		"description": "Dgraph JSON Base mutation"
	},
	"Dgraph JSON Base delete": {
		"prefix": "Dgraph-JSON-DeleteBase",
		"body": [
			"{",
			"  \"delete\": [",
			"    {",
			"      # One JSON obj in here",
			"    },",
			"    {",
			"      # Another JSON obj in here for multiple operations",
			"    }",
			"  ]",
			"}",
			""
		],
		"description": "Dgraph JSON Base delete"
	}
}
